name: Develop - Deploy Development

on:
  pull_request:
    branches: [ develop ]
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'
  push:
    branches: [ develop ]

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      PYTHON_VERSION: ${{ vars.PYTHON_VERSION }}
      TEST_COVER_MIN: ${{ vars.TEST_COVER_MIN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        working-directory: app
        run: |
          python -m pip install --upgrade pip
          if [ -f tests_requirements.txt ]; then pip install -r tests_requirements.txt; fi

      - name: Run unit tests with coverage
        working-directory: app
        run: |
          python -m pytest --cov=mmt --cov-fail-under=${{ env.TEST_COVER_MIN }} --cov-report=term-missing
  
  terraform-deploy:
    name: Terraform Deploy
    needs: unit-tests
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare Artifacts
        run: |
          chmod +x infra/build_artifact_lambda.sh
          infra/build_artifact_lambda.sh
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.1'

      - name: Configure AWS credentials
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/develop')
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/develop')
        working-directory: infra
        run: |
          terraform init -input=false -reconfigure -backend-config="region=$AWS_REGION"

      - name: Terraform Plan (PR)
        if: github.event_name == 'pull_request'
        working-directory: infra
        run: |
          terraform plan -input=false -var-file=env/dev.tfvars -out=tfplan

      - name: Terraform Apply (on push to develop)
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        working-directory: infra
        run: |
          terraform plan -input=false -var-file=env/dev.tfvars -out=tfplan
          terraform apply -input=false -auto-approve tfplan

